#pragma checksum "C:\git\NoteSystem\NetNotes.RazorComponents.Library\NoteComponent.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9f31723f49af3b183f8c0539a090409d81b3dd55"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace NetNotes.RazorComponents.Library
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\git\NoteSystem\NetNotes.RazorComponents.Library\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\git\NoteSystem\NetNotes.RazorComponents.Library\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\git\NoteSystem\NetNotes.RazorComponents.Library\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\git\NoteSystem\NetNotes.RazorComponents.Library\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\git\NoteSystem\NetNotes.RazorComponents.Library\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\git\NoteSystem\NetNotes.RazorComponents.Library\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\git\NoteSystem\NetNotes.RazorComponents.Library\_Imports.razor"
using NetNotes.RazorComponents.Library;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\git\NoteSystem\NetNotes.RazorComponents.Library\_Imports.razor"
using NetNotes.Business.Elements;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\git\NoteSystem\NetNotes.RazorComponents.Library\_Imports.razor"
using NetNotes.Business.Elements.Interfaces;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\git\NoteSystem\NetNotes.RazorComponents.Library\_Imports.razor"
using System.Drawing;

#line default
#line hidden
#nullable disable
    public partial class NoteComponent : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 21 "C:\git\NoteSystem\NetNotes.RazorComponents.Library\NoteComponent.razor"
       
    [Parameter]
    public Note Note { get; set; }

    [Parameter]
    public double Offset { get; set; }

    [Parameter]
    public double LineSpacing { get; set; }

    public string StemTransform()
    {
        if (Note.Pitch.HasValue && Note.Pitch.Value.StaffLocation < 6)
        {
            return $"translate({LineSpacing * 1.43}px, 0)";
        }
        var stemWidth = LineSpacing / 5;
        stemWidth = stemWidth > 1 ? stemWidth : 1;
        return $"translate({stemWidth * 1.2}px, {LineSpacing * 3.1}px)";
    }

    public string HeadTransform()
    {
        return $"translate(0, {LineSpacing * 2.85}px) scale({0.009 * LineSpacing}, {0.009 * LineSpacing})";
    }

    public string FlagTransform(int index)
    {
        if (Note.Pitch.HasValue && Note.Pitch.Value.StaffLocation < 6)
        {
            // right-side up
            return $"translate(-{LineSpacing * 9.3}px, -{LineSpacing * 9.4}px) scale({0.04 * LineSpacing}, {0.04 * LineSpacing})";
        }
        // up-side down
        return $"translate(-{LineSpacing * 10.5}px, {LineSpacing * 15.58}px) scale({0.04 * LineSpacing}, -{0.04 * LineSpacing})";
    }

    public double VerticalNotePosition()
    {
        var pitchValue = Note.Pitch.HasValue ? Note.Pitch.Value : Pitches.B4;
        return (LineSpacing * 5.9) - (pitchValue.StaffLocation * (LineSpacing / 2));
    }

    public NoteHead GetNoteHead()
    {
        if (Note.Duration.CommonTimeBeatLength >= 2.0)
        {
            return new NoteHead(NoteHeadShape.OpenOval);
        }

        return new NoteHead(NoteHeadShape.ClosedOval);
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
